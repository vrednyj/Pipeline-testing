name: Sonar Scanning.

# Workflow triggers
on:
  # Code pushed to Dev branch will be a trigger
  push:
    branches: [ Dev ]      
  # Code pulled from Dev branch will be a trigger
  pull_request:
    branches: [ Dev ]

jobs:
  Sonar-Scan:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.9]

    steps:
    - name: Checkout code # checking our the code at current commit that triggers the workflow
      uses: actions/checkout@v2

    - name: Cache dependency # caching dependency will make our build faster.
      uses: actions/cache@v2 # for more info checkout pip section documentation at https://github.com/actions/cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Check Syntax # check code formatting with flake8
      run: | 
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --output-file=flake8.txt
    
    - name: Setting up a Virtual Enviroment
      run: |
        python -m venv venv && source venv/bin/activate &&  pip install -r requirements.txt   

    - name: Exporting secret key
      run: |
        echo "SECRET_KEY = 'django-insecure-_^39%)wfp910i*)2!2+ihrxbnrv$&44nm#pv-yf!7&mqhbgnkz'" > .env

    - name: Run Migrations # run migrations to create table in side db container
      run: |
          source venv/bin/activate && python3.9 manage.py migrate

    - name: Test on the app
      run: |
        coverage erase              
        coverage run manage.py test
        coverage xml -i

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: 22b4d15d560eb216f8ef494beff4c67683ec755b # For test${{ secrets.SONAR_TOKEN }}
















